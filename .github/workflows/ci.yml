name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  tests:
    name: Run tests - Rust (${{ matrix.rust }}) on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - { rust: stable, os: ubuntu-20.04 }
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          components: rustfmt
          override: true
      - name: Build with all features
        run: cargo build --all-features
      - name: Build
        run: cargo build --workspace --verbose
      - name: Run tests
        run: cargo test --workspace --all-features
      - name: Clean
        run: cargo clean

  rustfmt:
    name: Run rustfmt - Rust (${{ matrix.rust }}) on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - { rust: nightly-2022-11-02, os: ubuntu-20.04 }
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true
          components: rustfmt
      - name: Check format
        run: cargo +${{ matrix.rust }} fmt --all -- --check
      - name: Check examples format
        working-directory: ./examples
        run: cargo +${{ matrix.rust }} fmt --all -- --check

  clippy:
    name: Run clippy - Rust (${{ matrix.rust }}) on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - { rust: stable, os: ubuntu-20.04 }
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true
          components: clippy
      - name: Check with clippy
        run: cargo clippy --all

  examples:
    name: Build examples - Rust (${{ matrix.rust }}) on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - { rust: stable, os: ubuntu-20.04 }
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true
          components: clippy, rustfmt
      - name: Check examples with clippy
        run: cargo clippy --all
        working-directory: ./examples
      - name: Build examples
        run: cargo build --workspace --verbose
        working-directory: ./examples
      - name: Clean examples
        run: cargo clean
        working-directory: ./examples

  autocorrect:
    name: AutoCorrect Lint
    runs-on: ubuntu-latest
    steps:
      - name: Check source code
        uses: actions/checkout@v3

      - name: AutoCorrect
        uses: huacnlee/autocorrect-action@v2
        with:
          args: --lint --no-diff-bg-color README.md
